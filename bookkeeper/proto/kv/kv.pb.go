// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kv.proto

package kv

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_EventType int32

const (
	Event_PUT    Event_EventType = 0
	Event_DELETE Event_EventType = 1
)

var Event_EventType_name = map[int32]string{
	0: "PUT",
	1: "DELETE",
}

var Event_EventType_value = map[string]int32{
	"PUT":    0,
	"DELETE": 1,
}

func (x Event_EventType) String() string {
	return proto.EnumName(Event_EventType_name, int32(x))
}

func (Event_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{1, 0}
}

type KeyValue struct {
	// key is the key in bytes. An empty key is not allowed.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// create_revision is the revision of last creation on this key.
	CreateRevision int64 `protobuf:"varint,2,opt,name=create_revision,json=createRevision,proto3" json:"create_revision,omitempty"`
	// mod_revision is the revision of last modification on this key.
	ModRevision int64 `protobuf:"varint,3,opt,name=mod_revision,json=modRevision,proto3" json:"mod_revision,omitempty"`
	// version is the version of the key. A deletion resets
	// the version to zero and any modification of the key
	// increases its version.
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// value is the value held by the key, in bytes.
	Value                []byte   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	IsNumber             bool     `protobuf:"varint,6,opt,name=is_number,json=isNumber,proto3" json:"is_number,omitempty"`
	NumberValue          int64    `protobuf:"varint,7,opt,name=number_value,json=numberValue,proto3" json:"number_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetCreateRevision() int64 {
	if m != nil {
		return m.CreateRevision
	}
	return 0
}

func (m *KeyValue) GetModRevision() int64 {
	if m != nil {
		return m.ModRevision
	}
	return 0
}

func (m *KeyValue) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyValue) GetIsNumber() bool {
	if m != nil {
		return m.IsNumber
	}
	return false
}

func (m *KeyValue) GetNumberValue() int64 {
	if m != nil {
		return m.NumberValue
	}
	return 0
}

type Event struct {
	// type is the kind of event. If type is a PUT, it indicates
	// new data has been stored to the key. If type is a DELETE,
	// it indicates the key was deleted.
	Type Event_EventType `protobuf:"varint,1,opt,name=type,proto3,enum=bookkeeper.proto.kv.Event_EventType" json:"type,omitempty"`
	// kv holds the KeyValue for the event.
	// A PUT event contains current kv pair.
	// A PUT event with kv.Version=1 indicates the creation of a key.
	// A DELETE/EXPIRE event contains the deleted key with
	// its modification revision set to the revision of deletion.
	Kv *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
	// prev_kv holds the key-value pair before the event happens.
	PrevKv               *KeyValue `protobuf:"bytes,3,opt,name=prev_kv,json=prevKv,proto3" json:"prev_kv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() Event_EventType {
	if m != nil {
		return m.Type
	}
	return Event_PUT
}

func (m *Event) GetKv() *KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *Event) GetPrevKv() *KeyValue {
	if m != nil {
		return m.PrevKv
	}
	return nil
}

func init() {
	proto.RegisterEnum("bookkeeper.proto.kv.Event_EventType", Event_EventType_name, Event_EventType_value)
	proto.RegisterType((*KeyValue)(nil), "bookkeeper.proto.kv.KeyValue")
	proto.RegisterType((*Event)(nil), "bookkeeper.proto.kv.Event")
}

func init() { proto.RegisterFile("kv.proto", fileDescriptor_2216fe83c9c12408) }

var fileDescriptor_2216fe83c9c12408 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x50, 0x41, 0xcb, 0xda, 0x40,
	0x10, 0xed, 0x9a, 0xcf, 0x24, 0x8e, 0x62, 0x65, 0xdb, 0x43, 0xa0, 0x14, 0x52, 0x69, 0xa9, 0x17,
	0x13, 0xb0, 0x20, 0x3d, 0x97, 0xe6, 0x64, 0x29, 0x12, 0x6c, 0x0f, 0xbd, 0x84, 0x8d, 0x0e, 0x1a,
	0xd6, 0xb8, 0xcb, 0x66, 0xb3, 0x90, 0xbf, 0xd8, 0x5f, 0xd0, 0x9f, 0x53, 0xb2, 0x5b, 0xb5, 0x07,
	0xe1, 0xbb, 0x2c, 0x33, 0x6f, 0xde, 0x9b, 0xb7, 0xf3, 0x20, 0xe4, 0x26, 0x91, 0x4a, 0x68, 0x41,
	0x5f, 0x95, 0x42, 0x70, 0x8e, 0x28, 0x51, 0x39, 0x24, 0xe1, 0x66, 0xfe, 0x87, 0x40, 0xb8, 0xc1,
	0xee, 0x27, 0x3b, 0xb7, 0x48, 0x67, 0xe0, 0x71, 0xec, 0x22, 0x12, 0x93, 0xc5, 0x24, 0xef, 0x4b,
	0xfa, 0x11, 0x5e, 0xee, 0x15, 0x32, 0x8d, 0x85, 0x42, 0x53, 0x35, 0x95, 0xb8, 0x44, 0x83, 0x98,
	0x2c, 0xbc, 0x7c, 0xea, 0xe0, 0xfc, 0x1f, 0x4a, 0xdf, 0xc1, 0xa4, 0x16, 0x87, 0x3b, 0xcb, 0xb3,
	0xac, 0x71, 0x2d, 0x0e, 0x37, 0x4a, 0x04, 0x81, 0x41, 0x65, 0xa7, 0x4f, 0x76, 0x7a, 0x6d, 0xe9,
	0x6b, 0x18, 0x9a, 0xfe, 0x03, 0xd1, 0xd0, 0x3a, 0xbb, 0x86, 0xbe, 0x81, 0x51, 0xd5, 0x14, 0x97,
	0xb6, 0x2e, 0x51, 0x45, 0x7e, 0x4c, 0x16, 0x61, 0x1e, 0x56, 0xcd, 0x77, 0xdb, 0xf7, 0x7e, 0x6e,
	0x52, 0x38, 0x65, 0xe0, 0xfc, 0x1c, 0x66, 0xaf, 0x99, 0xff, 0x26, 0x30, 0xcc, 0x0c, 0x5e, 0x34,
	0xfd, 0x0c, 0x4f, 0xba, 0x93, 0x68, 0x0f, 0x9b, 0xae, 0xde, 0x27, 0x0f, 0x82, 0x48, 0x2c, 0xd3,
	0xbd, 0xbb, 0x4e, 0x62, 0x6e, 0x15, 0x74, 0x09, 0x03, 0x6e, 0xec, 0xc9, 0xe3, 0xd5, 0xdb, 0x87,
	0xba, 0x6b, 0x78, 0xf9, 0x80, 0x1b, 0xba, 0x86, 0x40, 0x2a, 0x34, 0x05, 0x37, 0x36, 0x80, 0x67,
	0x35, 0x7e, 0xcf, 0xde, 0x98, 0x79, 0x0c, 0xa3, 0x9b, 0x33, 0x0d, 0xc0, 0xdb, 0xfe, 0xd8, 0xcd,
	0x5e, 0x50, 0x00, 0xff, 0x6b, 0xf6, 0x2d, 0xdb, 0x65, 0x33, 0xf2, 0x85, 0xc1, 0x07, 0xa1, 0x8e,
	0x09, 0x93, 0x6c, 0x7f, 0xc2, 0xff, 0x97, 0x36, 0x5a, 0x21, 0xab, 0x6f, 0xbb, 0xb7, 0xe4, 0xd7,
	0xfa, 0x58, 0xe9, 0x53, 0x5b, 0x26, 0x7b, 0x51, 0xa7, 0xf2, 0x84, 0x75, 0x8d, 0x2a, 0x3d, 0x8a,
	0xa5, 0x6c, 0xcf, 0x0d, 0x53, 0xcb, 0x46, 0x33, 0x8d, 0xe9, 0x7d, 0x41, 0x6a, 0x95, 0x29, 0x37,
	0xa5, 0x6f, 0xab, 0x4f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x03, 0x6c, 0x55, 0xfb, 0x32, 0x02,
	0x00, 0x00,
}
